{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedtahabayoumi/Documents/GitHub/React-GUI/src/components/secondTable.js\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport data from './etabs.json';\nexport default function BasicTable() {\n  var _this = this;\n\n  function createData(liste) {\n    var ans = {};\n\n    for (var i = 0; i < data.totalcount; i++) {\n      ans[data.items[i][nom]] = liste[i];\n    }\n\n    return {\n      name: name,\n      calories: calories,\n      fat: fat,\n      carbs: carbs,\n      protein: protein\n    };\n  }\n\n  var rows = [];\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    sx: {\n      minWidth: 650\n    },\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, data.items.map(function (element) {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      aligh: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, element[\"libelle\"]);\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, rows.map(function (row) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: row.name,\n      sx: {\n        '&:last-child td, &:last-child th': {\n          border: 0\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, row.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, row.calories), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, row.fat), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, row.carbs), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, row.protein));\n  }))));\n}","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","data","BasicTable","createData","liste","ans","i","totalcount","items","nom","name","calories","fat","carbs","protein","rows","minWidth","map","element","row","border"],"sources":["/Users/mohamedtahabayoumi/Documents/GitHub/React-GUI/src/components/secondTable.js"],"sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport data from './etabs.json'\n\n\n\nexport default function BasicTable() {\n    function createData(liste) {\n        const ans = {} ;\n        for (let  i = 0 ; i < data.totalcount ; i++) {\n            ans[data.items[i][nom]] = liste[i] ; \n        }\n        return { name, calories, fat, carbs, protein };\n    }\n    const rows = [];\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {(data.items).map((element) => (\n                            <TableCell aligh=\"right\">{element[\"libelle\"]}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow\n                            key={row.name}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.calories}</TableCell>\n                            <TableCell align=\"right\">{row.fat}</TableCell>\n                            <TableCell align=\"right\">{row.carbs}</TableCell>\n                            <TableCell align=\"right\">{row.protein}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}